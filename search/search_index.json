{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#smunger","title":"smunger","text":"<p>munger for GWAS summary statistics</p> <ul> <li>PyPI: https://pypi.org/project/smunger/</li> <li>Free software: MIT</li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li>[x]  define column properties<ul> <li>[x]  required columns: CHR, BP, EA, NEA</li> <li>[x]  optional columns: BETA, SE, P, EAF, MAF</li> <li>[x]  Auxiliary columns: OR, OR_SE, Z</li> <li>[x]  Data types</li> <li>[x]  Data ranges</li> <li>[x]  Allow missing values and default missing values</li> </ul> </li> <li>[x]  semi-automatically header mapping<ul> <li>[x]  read first five rows and display in terminal</li> <li>[x]  guess header map by common column names</li> <li>[x]  manually check if the mapping is correct</li> <li>[x]  input the right column number if it is wrong</li> <li>[x]  check if OR, OR_SE, Z are present if BETA, SE are absent</li> <li>[x]  save the final column map to json for further munging</li> </ul> </li> <li> <p>[x]  data munging</p> <ul> <li>[x]  EA \u2260 NEA</li> <li>[x]  if EAF presents, MAF = min(EAF, 1-EAF)</li> <li>[x]  convert OR/ORSE to BETA/SE, if BETA, SE are absent and OR, ORSE are present</li> <li>[x]  remove duplicate SNPs with same chr-bp-sorted(EA,NEA), keep the one with lowest P</li> <li>[x]  output: \\t separated, <code>bgzip</code> compress, <code>tabix</code> index.</li> <li>[x]  optional output: significant SNPs, munge report</li> </ul> CHR BP rsID EA NEA EAF MAF BETA SE P OR OR_SE Z type int int str str str float float float float float float float float allow null False False True False False False False True False True True False True null value 0 0.999 1 0 range [1\uff0c23] (0,inf) only contains \u2018ACGT\u2019 only contains \u2018ACGT\u2019 [0,1] [0,0.5] (-inf,inf) (0, inf) (0,1) (0, inf) (0, inf) (-inf,inf) - [x]  liftover - [x]  guess genome build - [x]  liftover - [x]  annotate - [x]  annotate rsID </li> </ul>"},{"location":"#credits","title":"Credits","text":"<p>This package was created with Cookiecutter and the waynerv/cookiecutter-pypackage project template.</p>"},{"location":"api/","title":"Modules","text":"<p>Top-level package for smunger.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#changelog","title":"Changelog","text":""},{"location":"changelog/#0110-2024-12-03","title":"[0.1.10] (2024-12-03)","text":"<ul> <li>update dependencies</li> </ul>"},{"location":"changelog/#017-2024-12-03","title":"[0.1.7] (2024-12-03)","text":"<ul> <li>fix <code>ser.iloc[pos]</code> warning</li> </ul>"},{"location":"changelog/#016-2023-12-13","title":"[0.1.6] (2023-12-13)","text":"<ul> <li>annotate alleles from rsID and coordinates</li> </ul>"},{"location":"changelog/#015-2023-09-25","title":"[0.1.5] (2023-09-25)","text":"<ul> <li>fix dependencies</li> </ul>"},{"location":"changelog/#012-2023-09-25","title":"[0.1.2] (2023-09-25)","text":"<ul> <li>fix dependencies</li> </ul>"},{"location":"changelog/#011-2023-06-24","title":"[0.1.1] (2023-06-24)","text":"<ul> <li>fix liftover output duplicate headers</li> </ul>"},{"location":"changelog/#010-2023-06-14","title":"[0.1.0] (2023-06-14)","text":"<ul> <li>annotate rsid bug fix</li> </ul>"},{"location":"changelog/#0027-2023-06-14","title":"[0.0.27] (2023-06-14)","text":"<ul> <li>annotate rsid no need unique SNPID</li> </ul>"},{"location":"changelog/#0026-2023-06-12","title":"[0.0.26] (2023-06-12)","text":"<ul> <li>reduce manhattan size</li> </ul>"},{"location":"changelog/#0025-2023-06-06","title":"[0.0.25] (2023-06-06)","text":"<ul> <li>annotate rsid with pd.Dataframe</li> </ul>"},{"location":"changelog/#0024-2023-05-24","title":"[0.0.24] (2023-05-24)","text":"<ul> <li>super fast manhattan plot and qq plot.</li> </ul>"},{"location":"changelog/#0023-2023-05-19","title":"[0.0.23] (2023-05-19)","text":"<ul> <li>replace SNPID col if it exists when make unique SNPID.</li> </ul>"},{"location":"changelog/#0022-2023-05-19","title":"[0.0.22] (2023-05-19)","text":"<ul> <li>munge tabix export.</li> </ul>"},{"location":"changelog/#0021-2023-05-19","title":"[0.0.21] (2023-05-19)","text":"<ul> <li>replace empty string with nan before remove nan columns.</li> </ul>"},{"location":"changelog/#0020-2023-05-19","title":"[0.0.20] (2023-05-19)","text":"<ul> <li>remove all nan columns before munge.</li> </ul>"},{"location":"changelog/#0019-2023-05-19","title":"[0.0.19] (2023-05-19)","text":"<ul> <li>Chang default logging level to warning.</li> </ul>"},{"location":"changelog/#0018-2023-03-28","title":"[0.0.18] (2023-03-28)","text":"<ul> <li>Build a tabix-indexed database of dbSNP data.</li> </ul>"},{"location":"changelog/#0017-2023-03-24","title":"[0.0.17] (2023-03-24)","text":"<ul> <li>annotate rsid include allele matching</li> </ul>"},{"location":"changelog/#0016-2023-03-24","title":"[0.0.16] (2023-03-24)","text":"<ul> <li>add export function</li> <li>add harmonize function</li> </ul>"},{"location":"changelog/#0015-2023-03-08","title":"[0.0.15] (2023-03-08)","text":"<ul> <li>skip missing column when map header</li> </ul>"},{"location":"changelog/#0014-2023-03-08","title":"[0.0.14] (2023-03-08)","text":"<ul> <li>skip missing column when map header</li> </ul>"},{"location":"changelog/#0013-2023-03-01","title":"[0.0.13] (2023-03-01)","text":"<ul> <li>fix bug in 0.0.12</li> </ul>"},{"location":"changelog/#0012-2023-03-01","title":"[0.0.12] (2023-03-01)","text":"<ul> <li>still munge after liftover</li> <li>check chr, bp before liftover</li> </ul>"},{"location":"changelog/#0011-2023-03-01","title":"[0.0.11] (2023-03-01)","text":"<ul> <li>no munge after liftover</li> </ul>"},{"location":"changelog/#0010-2023-02-28","title":"[0.0.10] (2023-02-28)","text":"<ul> <li>change load_sumstat input type to Union[str, Path]</li> </ul>"},{"location":"changelog/#009-2023-02-28","title":"[0.0.9] (2023-02-28)","text":"<ul> <li>support -log10P column</li> </ul>"},{"location":"changelog/#008-2023-02-24","title":"[0.0.8] (2023-02-24)","text":"<ul> <li>manul header map</li> </ul>"},{"location":"changelog/#007-2023-02-24","title":"[0.0.7] (2023-02-24)","text":"<ul> <li>annotate rsid</li> </ul>"},{"location":"changelog/#006-2023-02-23","title":"[0.0.6] (2023-02-23)","text":"<ul> <li>liftover</li> </ul>"},{"location":"changelog/#005-2023-02-23","title":"[0.0.5] (2023-02-23)","text":"<ul> <li>save significant snps</li> <li>save report</li> </ul>"},{"location":"changelog/#004-2023-02-23","title":"[0.0.4] (2023-02-23)","text":"<ul> <li>header map</li> <li>munger</li> </ul>"},{"location":"changelog/#003-2023-02-22","title":"[0.0.3] (2023-02-22)","text":"<ul> <li>io functions</li> </ul>"},{"location":"changelog/#002-2023-02-20","title":"[0.0.2] (2023-02-20)","text":"<ul> <li>column config</li> </ul>"},{"location":"changelog/#001-2023-02-20","title":"[0.0.1] (2023-02-20)","text":"<ul> <li>First release on PyPI.</li> </ul>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#contributing","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/jianhua/smunger/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>smunger could always use more documentation, whether as part of the official smunger docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/jianhua/smunger/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions   are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up <code>smunger</code> for local development.</p> <ol> <li>Fork the <code>smunger</code> repo on GitHub.</li> <li> <p>Clone your fork locally</p> <pre><code>$ git clone git@github.com:your_name_here/smunger.git\n</code></pre> </li> <li> <p>Ensure poetry is installed.</p> </li> <li> <p>Install dependencies and start your virtualenv:</p> <pre><code>$ poetry install -E test -E doc -E dev\n</code></pre> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> </li> <li> <p>When you're done making changes, check that your changes pass the    tests, including testing other Python versions, with tox:</p> <pre><code>$ poetry run tox\n</code></pre> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated. Put    your new functionality into a function with a docstring, and add the    feature to the list in README.md.</li> <li>The pull request should work for Python 3.6, 3.7, 3.8 and 3.9. Check    https://github.com/jianhua/smunger/actions    and make sure that the tests pass for all supported Python versions.</li> </ol>"},{"location":"contributing/#tips","title":"Tips","text":"<pre><code>$ poetry run pytest tests/test_smunger.py\n</code></pre> <p>To run a subset of tests.</p>"},{"location":"contributing/#deploying","title":"Deploying","text":"<p>A reminder for the maintainers on how to deploy. Make sure all your changes are committed (including an entry in CHANGELOG.md). Then run:</p> <pre><code>$ poetry run bump2version patch # possible: major / minor / patch\n$ git push\n$ git push --tags\n</code></pre> <p>GitHub Actions will then deploy to PyPI if tests pass.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#installation","title":"Installation","text":""},{"location":"installation/#stable-release","title":"Stable release","text":"<p>To install smunger, run this command in your terminal:</p> <pre><code>$ pip install smunger\n</code></pre> <p>This is the preferred method to install smunger, as it will always install the most recent stable release.</p> <p>If you don't have pip installed, this Python installation guide can guide you through the process.</p>"},{"location":"installation/#from-source","title":"From source","text":"<p>The source for smunger can be downloaded from the Github repo.</p> <p>You can either clone the public repository:</p> <pre><code>$ git clone git://github.com/jianhua/smunger\n</code></pre> <p>Or download the tarball:</p> <pre><code>$ curl -OJL https://github.com/jianhua/smunger/tarball/master\n</code></pre> <p>Once you have a copy of the source, you can install it with:</p> <pre><code>$ pip install .\n</code></pre>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#usage","title":"Usage","text":"<p>To use smunger in a project</p> <pre><code>import smunger\n</code></pre>"}]}